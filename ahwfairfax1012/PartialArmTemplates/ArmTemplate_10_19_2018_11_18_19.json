{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "ahwfairfax1012"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_7kl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_7kl",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "bashin/entitylogs.csv"
							},
							{
								"name": "Destination",
								"value": "bashout/copywizout.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_7kl",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_7kl",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_7kl')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_7kl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_w0y')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Try staging",
				"activities": [
					{
						"name": "Copy_w0y",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "bashin/entitylogs.csv"
							},
							{
								"name": "Destination",
								"value": "bashout/copywizstagedout.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ahwffStorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"path": "bashout"
							},
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_w0y",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_w0y",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_w0y')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_w0y')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HdiByoc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hive1",
						"type": "HDInsightHive",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"scriptPath": "hive1/Unnamed",
							"scriptLinkedService": {
								"referenceName": "AzureBlobStorage2",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HdiByocLS",
							"type": "LinkedServiceReference"
						}
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/HdiOnDemandTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HiveOnDemand",
						"type": "HDInsightHive",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"scriptPath": "hive1/Unnamed",
							"scriptLinkedService": {
								"referenceName": "ahwffStorageLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HdiByoc",
							"type": "LinkedServiceReference"
						}
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffManualControl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "From scratch",
				"activities": [
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"typeProperties": {
							"variableName": "StringVar",
							"value": {
								"value": "@pipeline().parameters.String1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@equals(length(variables('StringVar')), 0)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Variable1 Inner",
									"type": "SetVariable",
									"typeProperties": {
										"variableName": "StringVar2",
										"value": {
											"value": "@substring(variables('StringVar'),0,sub(length(variables('StringVar')), 1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable 2 Inner",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable1 Inner",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"typeProperties": {
										"variableName": "StringVar",
										"value": {
											"value": "@variables('StringVar2')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:02:00"
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"typeProperties": {
							"items": {
								"value": "@json(replace(pipeline().parameters.NumArrayString, '_', ''))",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(), 1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"userProperties": [
							{
								"name": "FirstUserProperty",
								"value": "First User Value"
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ahwffPipelineSingleWait",
								"type": "PipelineReference"
							}
						}
					}
				],
				"parameters": {
					"String1": {
						"type": "String"
					},
					"NumString": {
						"type": "String",
						"defaultValue": "1"
					},
					"BoolString": {
						"type": "String",
						"defaultValue": "true"
					},
					"NumArrayString": {
						"type": "String",
						"defaultValue": "_[1,2]"
					}
				},
				"variables": {
					"ArrayVar": {
						"type": "Array"
					},
					"StringVar": {
						"type": "String"
					},
					"StringVar2": {
						"type": "String"
					}
				},
				"annotations": [
					"ManualArthurW"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffPipelineSingleWait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineBlobToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyBlobToBlob",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.OutputBlobPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.OutputBlobName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					},
					"OutputBlobPath": {
						"type": "String",
						"defaultValue": "bashout"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineCanonical')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CanonicalStart",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalStart",
								"preferSuccess": {
									"value": "@pipeline().parameters.TakeSuccessPath",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CanonicalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CanonicalStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(activity('CanonicalStart').output.ShouldSucceed, 'bashout', 'BadContainerName')",
										"type": "Expression"
									},
									"fileName": "CanonicalOutput.csv"
								}
							}
						]
					},
					{
						"name": "CanonicalSucceeded",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceeded",
								"preferSuccess": true
							}
						}
					},
					{
						"name": "CanonicalFailed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalFailed",
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"TakeSuccessPath": {
						"type": "Bool"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineCanonicalWithSkip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Like PipelineCanonical, however pipeline run should succeed regardless of activity success.",
				"activities": [
					{
						"name": "CanonicalStart",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalStart (with skip)",
								"preferSuccess": {
									"value": "@pipeline().parameters.TakeSuccessPath",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CanonicalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CanonicalStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(activity('CanonicalStart').output.ShouldSucceed, 'bashout', 'BadContainerName')",
										"type": "Expression"
									},
									"fileName": "CanonicalWithSkipOutput.csv"
								}
							}
						]
					},
					{
						"name": "CanonicalSucceeded",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceeded (with skip)",
								"preferSuccess": true
							}
						}
					},
					{
						"name": "CanonicalSucceededFailed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalSucceeded",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceededFailed (with skip)",
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"TakeSuccessPath": {
						"type": "Bool"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineComplex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlToBlob1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed1, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Succeeded1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed1, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('succeeded1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Failed1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('failed1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Completed1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('completed1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CopySqlToBlob2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Completed1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed2, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Succeeded2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed2, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('succeeded2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Failed2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('failed2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Completed2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('completed2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					},
					"ShouldSucceed1": {
						"type": "Bool",
						"defaultValue": false
					},
					"ShouldSucceed2": {
						"type": "Bool",
						"defaultValue": false
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffSqlDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetIn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineCustomBatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CustomBatchTest",
						"type": "Custom",
						"policy": {
							"timeout": "00:03:00",
							"retry": 1,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"command": {
								"value": "Arthurw@{pipeline().parameters.test}Custom.exe",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "ahwffStorageLinkedService",
								"type": "LinkedServiceReference"
							},
							"folderPath": "bashin/custombatchfiles",
							"extendedProperties": {
								"testExtendedProperty": "expected value"
							},
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "ahwffStorageLinkedService",
										"type": "LinkedServiceReference"
									}
								],
								"datasets": [
									{
										"referenceName": "ahwffBlobDatasetOut",
										"type": "DatasetReference",
										"parameters": {
											"folderPath": "bashout",
											"fileName": "testcustomout.csv"
										}
									}
								]
							}
						},
						"linkedServiceName": {
							"referenceName": "ahwffBatchLinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WebFromCustomBatch",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CustomBatchTest",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{activity('CustomBatchTest')}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"test": {
						"type": "String",
						"defaultValue": "Test"
					}
				},
				"concurrency": 1
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineForeachCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupManyInputsList",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "ahwffBlobDatasetJson",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashin",
									"fileName": "manyinputslist.json"
								}
							}
						}
					},
					{
						"name": "ForEachOfManyInputs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupManyInputsList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupManyInputsList').output.firstRow.fileNames",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopyOneOfManyInputs",
									"type": "Copy",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ahwffBlobDatasetInParameterized",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "bashin/manyinputs",
												"fileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ahwffBlobDatasetOut",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "bashout/manyoutputs",
												"fileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "WebFromForEach",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEachOfManyInputs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "Hello from WebFromForEach",
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetJson')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetInParameterized')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineForeachIndex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachIndex",
						"type": "ForEach",
						"typeProperties": {
							"items": {
								"value": "@range(0, length(pipeline().parameters.dataset))",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "WebFromForEachIndex",
									"type": "WebActivity",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"message": {
												"value": "Hello from WebForEachIndex, index: @{item()}, value: @{pipeline().parameters.dataset[item()]}",
												"type": "Expression"
											},
											"runId": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"preferSuccess": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"dataset": {
						"type": "Array"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineGetMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadata",
						"type": "GetMetadata",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "ahwffBlobDatasetIn",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "HttpFromGetMetadata",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{activity('GetMetadata').output}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetIn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineIf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfConditionSimple",
						"type": "IfCondition",
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.Number, 3)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WaitFromIfFalse",
									"type": "Wait",
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "WebFromIfTrue",
									"type": "WebActivity",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"message": {
												"value": "Number in PipelineIf was greater than 3",
												"type": "Expression"
											},
											"runId": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"preferSuccess": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Number": {
						"type": "Int"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineLookupAndExecute')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "ahwffBlobDatasetJson",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashin",
									"fileName": "filename.json"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineFromLookup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ahwffPipelineBlobToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OutputBlobName": {
									"value": "@activity('Lookup').output.firstRow.fileName",
									"type": "Expression"
								}
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetJson')]",
				"[concat(variables('factoryId'), '/pipelines/ahwffPipelineBlobToBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineSingleWait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline with single wait activity",
				"activities": [
					{
						"name": "MyWait",
						"type": "Wait",
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"concurrency": 15
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineSproc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Add some description",
				"activities": [
					{
						"name": "SqlSproc",
						"type": "SqlServerStoredProcedure",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "sp_sqlexec",
							"storedProcedureParameters": {
								"p1": {
									"value": "select * from dbo.EntityCreation",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ahwffSqlLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineSqlToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlToBlob",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffBlobDatasetOutWithManagedIR",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.OutputBlobName",
										"type": "Expression"
									},
									"folderPath": "bashout"
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffSqlDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffBlobDatasetOutWithManagedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffPipelineWeb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebFromWeb",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-04.usgovtexas.logic.azure.us:443/workflows/06d3f1e80c424db6b00bc8ad9b2532f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AwLvoWlxRIBLm9nentVWWQRVkvWMNd4OhqqLy-gNpZo",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{pipeline().parameters.Greeting} and @{json('{''one'':1}')}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"Greeting": {
						"type": "String"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineBlobToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyBlobToBlob",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.OutputBlobPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.OutputBlobName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					},
					"OutputBlobPath": {
						"type": "String",
						"defaultValue": "bashout"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineCanonical')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CanonicalStart",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalStart",
								"preferSuccess": {
									"value": "@pipeline().parameters.TakeSuccessPath",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CanonicalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CanonicalStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(activity('CanonicalStart').output.ShouldSucceed, 'bashout', 'BadContainerName')",
										"type": "Expression"
									},
									"fileName": "CanonicalOutput.csv"
								}
							}
						]
					},
					{
						"name": "CanonicalSucceeded",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceeded",
								"preferSuccess": true
							}
						}
					},
					{
						"name": "CanonicalFailed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalFailed",
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"TakeSuccessPath": {
						"type": "Bool"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineCanonicalWithSkip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Like PipelineCanonical, however pipeline run should succeed regardless of activity success.",
				"activities": [
					{
						"name": "CanonicalStart",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalStart (with skip)",
								"preferSuccess": {
									"value": "@pipeline().parameters.TakeSuccessPath",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CanonicalCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CanonicalStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(activity('CanonicalStart').output.ShouldSucceed, 'bashout', 'BadContainerName')",
										"type": "Expression"
									},
									"fileName": "CanonicalWithSkipOutput.csv"
								}
							}
						]
					},
					{
						"name": "CanonicalSucceeded",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceeded (with skip)",
								"preferSuccess": true
							}
						}
					},
					{
						"name": "CanonicalSucceededFailed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CanonicalSucceeded",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"message": "Hello from CanonicalSucceededFailed (with skip)",
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"TakeSuccessPath": {
						"type": "Bool"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineComplex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlToBlob1",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed1, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Succeeded1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed1, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('succeeded1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Failed1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('failed1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Completed1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('completed1_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CopySqlToBlob2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Completed1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed2, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Succeeded2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@if(pipeline().parameters.ShouldSucceed2, 'bashout', 'InvalidContainer')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat('intermediate2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('succeeded2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Failed2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('failed2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Completed2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopySqlToBlob2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOut",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashout",
									"fileName": {
										"value": "@concat('completed2_', pipeline().parameters.OutputBlobName)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					},
					"ShouldSucceed1": {
						"type": "Bool",
						"defaultValue": false
					},
					"ShouldSucceed2": {
						"type": "Bool",
						"defaultValue": false
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubSqlDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetIn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineCustomBatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CustomBatchTest",
						"type": "Custom",
						"policy": {
							"timeout": "00:03:00",
							"retry": 1,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"command": {
								"value": "Arthurw@{pipeline().parameters.test}Custom.exe",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "ahwffpubStorageLinkedService",
								"type": "LinkedServiceReference"
							},
							"folderPath": "bashin/custombatchfiles",
							"extendedProperties": {
								"testExtendedProperty": "expected value"
							},
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "ahwffpubStorageLinkedService",
										"type": "LinkedServiceReference"
									}
								],
								"datasets": [
									{
										"referenceName": "ahwffpubBlobDatasetOut",
										"type": "DatasetReference",
										"parameters": {
											"folderPath": "bashout",
											"fileName": "testcustomout.csv"
										}
									}
								]
							}
						},
						"linkedServiceName": {
							"referenceName": "ahwffpubBatchLinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WebFromCustomBatch",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CustomBatchTest",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{activity('CustomBatchTest')}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"test": {
						"type": "String",
						"defaultValue": "Test"
					}
				},
				"concurrency": 1
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineForeachCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupManyInputsList",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "ahwffpubBlobDatasetJson",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashin",
									"fileName": "manyinputslist.json"
								}
							}
						}
					},
					{
						"name": "ForEachOfManyInputs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupManyInputsList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupManyInputsList').output.firstRow.fileNames",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopyOneOfManyInputs",
									"type": "Copy",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ahwffpubBlobDatasetInParameterized",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "bashin/manyinputs",
												"fileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ahwffpubBlobDatasetOut",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "bashout/manyoutputs",
												"fileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "WebFromForEach",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEachOfManyInputs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "Hello from WebFromForEach",
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetJson')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetInParameterized')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineForeachIndex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachIndex",
						"type": "ForEach",
						"typeProperties": {
							"items": {
								"value": "@range(0, length(pipeline().parameters.dataset))",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "WebFromForEachIndex",
									"type": "WebActivity",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"message": {
												"value": "Hello from WebForEachIndex, index: @{item()}, value: @{pipeline().parameters.dataset[item()]}",
												"type": "Expression"
											},
											"runId": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"preferSuccess": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"dataset": {
						"type": "Array"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineGetMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadata",
						"type": "GetMetadata",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "ahwffpubBlobDatasetIn",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "HttpFromGetMetadata",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{activity('GetMetadata').output}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetIn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineIf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfConditionSimple",
						"type": "IfCondition",
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.Number, 3)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WaitFromIfFalse",
									"type": "Wait",
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "WebFromIfTrue",
									"type": "WebActivity",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"message": {
												"value": "Number in PipelineIf was greater than 3",
												"type": "Expression"
											},
											"runId": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"preferSuccess": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Number": {
						"type": "Int"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineLookupAndExecute')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "ahwffpubBlobDatasetJson",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": "bashin",
									"fileName": "filename.json"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineFromLookup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ahwffpubPipelineBlobToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OutputBlobName": {
									"value": "@activity('Lookup').output.firstRow.fileName",
									"type": "Expression"
								}
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetJson')]",
				"[concat(variables('factoryId'), '/pipelines/ahwffpubPipelineBlobToBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineSingleWait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline with single wait activity",
				"activities": [
					{
						"name": "MyWait",
						"type": "Wait",
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"concurrency": 15
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineSproc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SqlSproc",
						"type": "SqlServerStoredProcedure",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "sp_sqlexec",
							"storedProcedureParameters": {
								"p1": {
									"value": "select * from dbo.EntityCreation",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ahwffpubSqlLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineSqlToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlToBlob",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "ahwffpubSqlDatasetIn",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ahwffpubBlobDatasetOutWithManagedIR",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.OutputBlobName",
										"type": "Expression"
									},
									"folderPath": "bashout"
								}
							}
						]
					}
				],
				"parameters": {
					"OutputBlobName": {
						"type": "String"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ahwffpubSqlDatasetIn')]",
				"[concat(variables('factoryId'), '/datasets/ahwffpubBlobDatasetOutWithManagedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubPipelineWeb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebFromWeb",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-12.eastus.logic.azure.com:443/workflows/c96e127b209948228f6cddcab121aaab/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=27wBIQwhVaA2eMhNEnuHSK604VEJpsUIslT4nkpwNiM",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": {
									"value": "@{pipeline().parameters.Greeting} and @{json('{''one'':1}')}",
									"type": "Expression"
								},
								"runId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"preferSuccess": true
							}
						}
					}
				],
				"parameters": {
					"Greeting": {
						"type": "String"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_7kl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "copywizout.csv",
					"folderPath": "bashout"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_w0y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "copywizstagedout.csv",
					"folderPath": "bashout"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_7kl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "DateTime"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "DateTime"
					},
					{
						"name": "Prop_5",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "entitylogs.csv",
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_w0y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "DateTime"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "DateTime"
					},
					{
						"name": "Prop_5",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "entitylogs.csv",
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": "entitylogs.csv",
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetInFolderOnly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetInParameterized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@dataset().fileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "JsonFormat"
					},
					"fileName": {
						"value": "@dataset().fileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@concat('ahwff_', dataset().fileName)",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffBlobDatasetOutWithManagedIR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffStorageLinkedServiceWithManagedIR",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@concat('ahwff_', dataset().fileName)",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffSqlDatasetIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffSqlLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "EntityId",
						"type": "Guid"
					},
					{
						"name": "CustomerId",
						"type": "Guid"
					},
					{
						"name": "Timestamp",
						"type": "Datetime"
					},
					{
						"name": "DurationSeconds",
						"type": "Int"
					}
				],
				"typeProperties": {
					"tableName": "EntityCreation"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": "entitylogs.csv",
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetInFolderOnly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "bashin"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetInParameterized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@dataset().fileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "JsonFormat"
					},
					"fileName": {
						"value": "@dataset().fileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@concat('ahwffpub_', dataset().fileName)",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubBlobDatasetOutWithManagedIR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubStorageLinkedServiceWithManagedIR",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@concat('ahwffpub_', dataset().fileName)",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folderPath",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubSqlDatasetIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ahwffpubSqlLinkedService",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "EntityId",
						"type": "Guid"
					},
					{
						"name": "CustomerId",
						"type": "Guid"
					},
					{
						"name": "Timestamp",
						"type": "Datetime"
					},
					{
						"name": "DurationSeconds",
						"type": "Int"
					}
				],
				"typeProperties": {
					"tableName": "EntityCreation"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffTriggerMultipleWeb')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 1 from TriggerMultipleWeb ahwff at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 2 from TriggerMultipleWeb ahwff at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 3 from TriggerMultipleWeb ahwff at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 4 from TriggerMultipleWeb ahwff at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 5 from TriggerMultipleWeb ahwff at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2018-10-16T22:04:12.9539318Z",
						"endTime": "2028-10-16T22:04:12.9539318Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffPipelineWeb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffTriggerSingleWait')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ahwffPipelineSingleWait",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2018-10-16T22:04:12.9529329Z",
						"endTime": "2028-10-16T22:04:12.9529329Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffPipelineSingleWait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffTriggerTumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "ahwffPipelineSingleWait",
						"type": "PipelineReference"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2018-10-16T17:04:12.9539318Z",
					"endTime": "2018-10-16T20:49:12.9539318Z",
					"maxConcurrency": 10
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffPipelineSingleWait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubTriggerMultipleWeb')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 1 from TriggerMultipleWeb ahwffpub at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 2 from TriggerMultipleWeb ahwffpub at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 3 from TriggerMultipleWeb ahwffpub at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 4 from TriggerMultipleWeb ahwffpub at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineWeb",
							"type": "PipelineReference"
						},
						"parameters": {
							"Greeting": "@{concat('Hello 5 from TriggerMultipleWeb ahwffpub at time ', formatDateTime(trigger().startTime, 'yyyy-MM-dd-HH-mm'))}"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2018-10-16T00:01:27.9112564Z",
						"endTime": "2028-10-16T00:01:27.9112564Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffpubPipelineWeb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubTriggerSingleWait')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ahwffpubPipelineSingleWait",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2018-10-16T00:01:27.910258Z",
						"endTime": "2028-10-16T00:01:27.910258Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffpubPipelineSingleWait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ahwffpubTriggerTumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "ahwffpubPipelineSingleWait",
						"type": "PipelineReference"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2018-10-15T19:01:27.910258Z",
					"endTime": "2018-10-15T22:46:27.910258Z",
					"maxConcurrency": 10
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ahwffpubPipelineSingleWait')]"
			]
		}
	]
}